module.iam.data.aws_caller_identity.current: Reading...
data.aws_caller_identity.current: Reading...
module.iam.data.aws_caller_identity.current: Read complete after 0s [id=677450898543]
data.aws_caller_identity.current: Read complete after 0s [id=677450898543]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # module.codeartifact["ecommerce-common-lib-artifacts"].aws_codeartifact_repository.this will be created
  + resource "aws_codeartifact_repository" "this" {
      + administrator_account = (known after apply)
      + arn                   = (known after apply)
      + domain                = "ecommerce-domain"
      + domain_owner          = (known after apply)
      + id                    = (known after apply)
      + region                = "ap-southeast-1"
      + repository            = "ecommerce-common-lib-artifacts"
      + tags_all              = (known after apply)

      + external_connections {
          + external_connection_name = "public:maven-central"
          + package_format           = (known after apply)
          + status                   = (known after apply)
        }
    }

  # module.codeartifact["ecommerce-shared"].aws_codeartifact_repository.this will be updated in-place
  ~ resource "aws_codeartifact_repository" "this" {
        id                    = "arn:aws:codeartifact:ap-southeast-1:677450898543:repository/ecommerce-domain/ecommerce-shared"
        tags                  = {}
        # (8 unchanged attributes hidden)

      + upstream {
          + repository_name = "ecommerce-common-lib-artifacts"
        }

        # (3 unchanged blocks hidden)
    }

  # module.codebuild_project["dev-ecommerce-auth-service-build"].aws_codebuild_project.maven_project will be updated in-place
  ~ resource "aws_codebuild_project" "maven_project" {
        id                     = "arn:aws:codebuild:ap-southeast-1:677450898543:project/dev-ecommerce-auth-service-build"
        name                   = "dev-ecommerce-auth-service-build"
        tags                   = {}
        # (15 unchanged attributes hidden)

      ~ environment {
            # (6 unchanged attributes hidden)

          + environment_variable {
              + name  = "WEBSITE_BUCKET"
              + type  = "PLAINTEXT"
              + value = "ecommerce-web-ui-dev-677450898543"
            }
        }

        # (4 unchanged blocks hidden)
    }

  # module.codebuild_project["dev-ecommerce-parent-pom-build"].aws_codebuild_project.maven_project will be updated in-place
  ~ resource "aws_codebuild_project" "maven_project" {
        id                     = "arn:aws:codebuild:ap-southeast-1:677450898543:project/dev-ecommerce-parent-pom-build"
        name                   = "dev-ecommerce-parent-pom-build"
        tags                   = {}
        # (15 unchanged attributes hidden)

      ~ environment {
            # (6 unchanged attributes hidden)

          + environment_variable {
              + name  = "WEBSITE_BUCKET"
              + type  = "PLAINTEXT"
              + value = "ecommerce-web-ui-dev-677450898543"
            }
        }

        # (4 unchanged blocks hidden)
    }

  # module.codebuild_project["dev-ecommerce-product-service-build"].aws_codebuild_project.maven_project will be updated in-place
  ~ resource "aws_codebuild_project" "maven_project" {
        id                     = "arn:aws:codebuild:ap-southeast-1:677450898543:project/dev-ecommerce-product-service-build"
        name                   = "dev-ecommerce-product-service-build"
        tags                   = {}
        # (15 unchanged attributes hidden)

      ~ environment {
            # (6 unchanged attributes hidden)

          + environment_variable {
              + name  = "WEBSITE_BUCKET"
              + type  = "PLAINTEXT"
              + value = "ecommerce-web-ui-dev-677450898543"
            }
        }

        # (4 unchanged blocks hidden)
    }

  # module.iam.aws_iam_role_policy.codebuild_website_s3_access["codebuild-role-dev-ecommerce-auth-service-build"] will be created
  + resource "aws_iam_role_policy" "codebuild_website_s3_access" {
      + id          = (known after apply)
      + name        = "codebuild-role-dev-ecommerce-auth-service-build-website-s3-access"
      + name_prefix = (known after apply)
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "s3:PutObject",
                          + "s3:PutObjectAcl",
                          + "s3:GetObject",
                          + "s3:DeleteObject",
                          + "s3:ListBucket",
                        ]
                      + Effect   = "Allow"
                      + Resource = [
                          + "arn:aws:s3:::ecommerce-web-ui-dev-677450898543",
                          + "arn:aws:s3:::ecommerce-web-ui-dev-677450898543/*",
                        ]
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + role        = "codebuild-role-dev-ecommerce-auth-service-build"
    }

  # module.iam.aws_iam_role_policy.codebuild_website_s3_access["codebuild-role-dev-ecommerce-parent-pom-build"] will be created
  + resource "aws_iam_role_policy" "codebuild_website_s3_access" {
      + id          = (known after apply)
      + name        = "codebuild-role-dev-ecommerce-parent-pom-build-website-s3-access"
      + name_prefix = (known after apply)
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "s3:PutObject",
                          + "s3:PutObjectAcl",
                          + "s3:GetObject",
                          + "s3:DeleteObject",
                          + "s3:ListBucket",
                        ]
                      + Effect   = "Allow"
                      + Resource = [
                          + "arn:aws:s3:::ecommerce-web-ui-dev-677450898543",
                          + "arn:aws:s3:::ecommerce-web-ui-dev-677450898543/*",
                        ]
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + role        = "codebuild-role-dev-ecommerce-parent-pom-build"
    }

  # module.iam.aws_iam_role_policy.codebuild_website_s3_access["codebuild-role-dev-ecommerce-product-service-build"] will be created
  + resource "aws_iam_role_policy" "codebuild_website_s3_access" {
      + id          = (known after apply)
      + name        = "codebuild-role-dev-ecommerce-product-service-build-website-s3-access"
      + name_prefix = (known after apply)
      + policy      = jsonencode(
            {
              + Statement = [
                  + {
                      + Action   = [
                          + "s3:PutObject",
                          + "s3:PutObjectAcl",
                          + "s3:GetObject",
                          + "s3:DeleteObject",
                          + "s3:ListBucket",
                        ]
                      + Effect   = "Allow"
                      + Resource = [
                          + "arn:aws:s3:::ecommerce-web-ui-dev-677450898543",
                          + "arn:aws:s3:::ecommerce-web-ui-dev-677450898543/*",
                        ]
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + role        = "codebuild-role-dev-ecommerce-product-service-build"
    }

  # module.website_bucket.aws_s3_bucket.website will be created
  + resource "aws_s3_bucket" "website" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "ecommerce-web-ui-dev-677450898543"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_region               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = "ap-southeast-1"
      + request_payer               = (known after apply)
      + tags                        = {
          + "Environment" = "dev"
          + "Name"        = "ecommerce-web-ui-dev-677450898543"
        }
      + tags_all                    = {
          + "Environment" = "dev"
          + "Name"        = "ecommerce-web-ui-dev-677450898543"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

  # module.website_bucket.aws_s3_bucket_lifecycle_configuration.website_lifecycle will be created
  + resource "aws_s3_bucket_lifecycle_configuration" "website_lifecycle" {
      + bucket                                 = (known after apply)
      + expected_bucket_owner                  = (known after apply)
      + id                                     = (known after apply)
      + region                                 = "ap-southeast-1"
      + transition_default_minimum_object_size = "all_storage_classes_128K"

      + rule {
          + id     = "expire-objects"
          + status = "Enabled"
            # (1 unchanged attribute hidden)

          + expiration {
              + days                         = 3650
              + expired_object_delete_marker = false
            }

          + filter {
                # (1 unchanged attribute hidden)
            }
        }
    }

  # module.website_bucket.aws_s3_bucket_policy.website_policy[0] will be created
  + resource "aws_s3_bucket_policy" "website_policy" {
      + bucket = (known after apply)
      + id     = (known after apply)
      + policy = (known after apply)
      + region = "ap-southeast-1"
    }

  # module.website_bucket.aws_s3_bucket_public_access_block.website_block will be created
  + resource "aws_s3_bucket_public_access_block" "website_block" {
      + block_public_acls       = false
      + block_public_policy     = false
      + bucket                  = (known after apply)
      + id                      = (known after apply)
      + ignore_public_acls      = false
      + region                  = "ap-southeast-1"
      + restrict_public_buckets = false
    }

  # module.website_bucket.aws_s3_bucket_website_configuration.website_cfg will be created
  + resource "aws_s3_bucket_website_configuration" "website_cfg" {
      + bucket           = (known after apply)
      + id               = (known after apply)
      + region           = "ap-southeast-1"
      + routing_rules    = (known after apply)
      + website_domain   = (known after apply)
      + website_endpoint = (known after apply)

      + error_document {
          + key = "error.html"
        }

      + index_document {
          + suffix = "index.html"
        }

      + routing_rule (known after apply)
    }

Plan: 9 to add, 4 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
